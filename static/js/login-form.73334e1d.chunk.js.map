{"version":3,"file":"static/js/login-form.73334e1d.chunk.js","mappings":"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","sources":["constants/loginForm.js","pages/LoginForm/loginValidation.js","pages/LoginForm/LoginForm.jsx"],"sourcesContent":["export const GENDER_OPTIONS = Object.freeze({\n  male: 'male',\n  female: 'female',\n  skip: 'skip',\n});\n\nexport const CITY_OPTIONS = Object.freeze({\n  Dnipro: 'Dnipro',\n  Kyiv: 'Kyiv',\n  Lviv: 'Lviv',\n  Marioupl: 'Marioupl',\n});\n","import * as Yup from 'yup';\nexport const loginValidationScheme = Yup.object({\n  email: Yup.string().required().label('Email'),\n  password: Yup.string()\n    .required()\n    .label('Password')\n    .min(6, 'Password is too short'),\n  gender: Yup.string(),\n  city: Yup.string(),\n  agree: Yup.bool().oneOf(\n    [true],\n    'You need to accept the terms and conditions'\n  ).required(),\n});\n","import {\n  Button,\n  Checkbox,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Paper,\n  Radio,\n  RadioGroup,\n  Select,\n  TextField,\n} from '@mui/material';\n\nimport { CITY_OPTIONS, GENDER_OPTIONS } from 'constants/loginForm';\nimport { Form, Formik } from 'formik';\nimport useAuth from 'hooks/useAuth';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { loginValidationScheme } from './loginValidation';\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n  const location = useLocation();\n  const textFields = [\n    {\n      key: 'email',\n      label: 'Email',\n      placeholder: 'Enter your email',\n      helperText: 'e.g. example@email.com',\n    },\n    {\n      key: 'password',\n      label: 'Password',\n      placeholder: 'Enter your password',\n    },\n  ];\n\n  return (\n    <Paper style={{ padding: '1rem' }}>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          agree: false,\n          gender: GENDER_OPTIONS.skip,\n          city: CITY_OPTIONS.Kyiv,\n        }}\n        validationSchema={loginValidationScheme}\n        onSubmit={values => {\n          login(values).then(() => {\n            navigate(location.state?.from || '/products');\n          });\n        }}\n      >\n        {props => (\n          <Form style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\n            {textFields.map(({ key, label, placeholder, helperText }) => (\n              <TextField\n                key={key}\n                variant=\"outlined\"\n                label={label}\n                name={key}\n                type={key}\n                placeholder={placeholder}\n                value={props.values[key]}\n                error={Boolean(props.errors[key])}\n                helperText={props.errors[key] || helperText}\n                onChange={props.handleChange}\n                InputLabelProps={{ shrink: true }}\n              />\n            ))}\n\n            <FormControlLabel\n              control={<Checkbox />}\n              label=\"I agree with Terms & Conditions\"\n              name=\"agree\"\n              checked={props.values.agree}\n              onChange={props.handleChange}\n            />\n            <FormControl>\n              <FormLabel id=\"demo-radio-buttons-group-label\">Gender</FormLabel>\n              <RadioGroup\n                aria-labelledby=\"demo-radio-buttons-group-label\"\n                value={props.values.gender}\n                name=\"gender\"\n                onChange={props.handleChange}\n              >\n                {Object.keys(GENDER_OPTIONS).map(key => {\n                  const value = GENDER_OPTIONS[key];\n                  return (\n                    <FormControlLabel\n                      key={key}\n                      style={{ textTransform: 'capitalize' }}\n                      value={value}\n                      control={<Radio />}\n                      label={value}\n                    />\n                  );\n                })}\n              </RadioGroup>\n            </FormControl>\n            <FormControl>\n              <InputLabel id=\"city-field\">City</InputLabel>\n              <Select\n                id=\"city-field\"\n                value={props.values.city}\n                name=\"city\"\n                label=\"City\"\n                onChange={props.handleChange}\n                style={{ textTransform: 'capitalize' }}\n              >\n                {Object.keys(CITY_OPTIONS).map(key => {\n                  const value = CITY_OPTIONS[key];\n                  return (\n                    <MenuItem\n                      style={{ textTransform: 'capitalize' }}\n                      key={key}\n                      value={value}\n                    >\n                      {value}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              disabled={Object.values(props.errors).some(Boolean)}\n            >\n              Sign In\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Paper>\n  );\n};\n\nexport default LoginForm;\n"],"names":["GENDER_OPTIONS","Object","freeze","male","female","skip","CITY_OPTIONS","Dnipro","Kyiv","Lviv","Marioupl","loginValidationScheme","Yup","email","required","label","password","min","gender","city","agree","oneOf","navigate","useNavigate","login","useAuth","location","useLocation","textFields","key","placeholder","helperText","Paper","style","padding","initialValues","validationSchema","onSubmit","values","then","state","from","props","display","flexDirection","gap","map","TextField","variant","name","type","value","error","Boolean","errors","onChange","handleChange","InputLabelProps","shrink","FormControlLabel","control","Checkbox","checked","FormControl","FormLabel","id","RadioGroup","keys","textTransform","Radio","InputLabel","Select","MenuItem","Button","disabled","some"],"sourceRoot":""}